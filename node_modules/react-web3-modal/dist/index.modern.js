import * as React$1 from 'react';
import React__default, { useRef, useEffect, useState, useCallback, useContext, createContext } from 'react';
import { useWeb3React, UnsupportedChainIdError, Web3ReactProvider } from '@web3-react/core';
import { ethers } from 'ethers';
import { WalletConnectConnector } from '@web3-react/walletconnect-connector';
import { isMobile } from 'react-device-detect';
import styled, { css, keyframes, createGlobalStyle, ThemeProvider as ThemeProvider$1 } from 'styled-components';
import { FortmaticConnector as FortmaticConnector$1 } from '@web3-react/fortmatic-connector';
import { transparentize } from 'polished';
import { Text as Text$1 } from 'rebass';
import { getAddress } from '@ethersproject/address';
import copy from 'copy-to-clipboard';
import { CheckCircle, Copy } from 'react-feather';
import Jazzicon from 'jazzicon';
import { InjectedConnector } from '@web3-react/injected-connector';
import { WalletLinkConnector } from '@web3-react/walletlink-connector';
import { PortisConnector } from '@web3-react/portis-connector';
import { animated, useTransition, useSpring } from 'react-spring';
import { DialogOverlay, DialogContent } from '@reach/dialog';
import '@reach/dialog/styles.css';
import { useGesture } from 'react-use-gesture';

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends$1() {
  _extends$1 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$1.apply(this, arguments);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

const img$5 = require('./metamask.png');

var _path;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function SvgX(props) {
  return /*#__PURE__*/React$1.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    width: 20,
    height: 20,
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className: "x_svg__feather x_svg__feather-x"
  }, props), _path || (_path = /*#__PURE__*/React$1.createElement("path", {
    d: "M18 6L6 18M6 6l12 12"
  })));
}

require('./x.svg');

var OVERLAY_READY = 'OVERLAY_READY';
var CHAIN_ID_NETWORK_ARGUMENT = {
  1: undefined,
  3: 'ropsten',
  4: 'rinkeby',
  42: 'kovan'
};
var FortmaticConnector = /*#__PURE__*/function (_FortmaticConnectorCo) {
  _inherits(FortmaticConnector, _FortmaticConnectorCo);

  var _super = _createSuper(FortmaticConnector);

  function FortmaticConnector() {
    _classCallCheck(this, FortmaticConnector);

    return _super.apply(this, arguments);
  }

  _createClass(FortmaticConnector, [{
    key: "activate",
    value: function () {
      var _activate = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var _this = this;

        var _yield$import, Fortmatic, apiKey, chainId, provider, pollForOverlayReady, _yield$Promise$all, _yield$Promise$all2, account;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (this.fortmatic) {
                  _context.next = 11;
                  break;
                }

                _context.next = 3;
                return import('fortmatic');

              case 3:
                _yield$import = _context.sent;
                Fortmatic = _yield$import["default"];
                apiKey = this.apiKey, chainId = this.chainId;

                if (!(chainId in CHAIN_ID_NETWORK_ARGUMENT)) {
                  _context.next = 10;
                  break;
                }

                this.fortmatic = new Fortmatic(apiKey, CHAIN_ID_NETWORK_ARGUMENT[chainId]);
                _context.next = 11;
                break;

              case 10:
                throw new Error("Unsupported network ID: ".concat(chainId));

              case 11:
                provider = this.fortmatic.getProvider();
                pollForOverlayReady = new Promise(function (resolve) {
                  var interval = setInterval(function () {
                    if (provider.overlayReady) {
                      clearInterval(interval);

                      _this.emit(OVERLAY_READY);

                      resolve();
                    }
                  }, 200);
                });
                _context.next = 15;
                return Promise.all([provider.enable().then(function (accounts) {
                  return accounts[0];
                }), pollForOverlayReady]);

              case 15:
                _yield$Promise$all = _context.sent;
                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 1);
                account = _yield$Promise$all2[0];
                return _context.abrupt("return", {
                  provider: this.fortmatic.getProvider(),
                  chainId: this.chainId,
                  account: account
                });

              case 19:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function activate() {
        return _activate.apply(this, arguments);
      }

      return activate;
    }()
  }]);

  return FortmaticConnector;
}(FortmaticConnector$1);

function usePrevious(value) {
  // The ref object is a generic container whose current property is mutable ...
  // ... and can hold any value, similar to an instance property on a class
  var ref = useRef(); // Store current value in ref

  useEffect(function () {
    ref.current = value;
  }, [value]); // Only re-run if value changes
  // Return previous value (happens before update in useEffect above)

  return ref.current;
}

var img$4 = require('./walletConnectIcon.svg');

var img$3 = require('./coinbaseWalletIcon.svg');

const img$2 = require('./fortmaticIcon.png');

const img$1 = require('./portisIcon.png');

var img = require('./arrow-right.svg');

function isAddress(value) {
  try {
    return getAddress(value);
  } catch (_unused) {
    return false;
  }
} // shorten the checksummed version of the input address to have 0x + 4 characters at start and end

function shortenAddress(address) {
  var chars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;
  var parsed = isAddress(address);

  if (!parsed) {
    throw Error("Invalid 'address' parameter '".concat(address, "'."));
  }

  return "".concat(parsed.substring(0, chars + 2), "...").concat(parsed.substring(42 - chars));
}
function getWalletIcon(wallet) {
  switch (wallet) {
    case 'metamask':
      return img$5;

    case 'walletconnect':
      return img$4;

    case 'walletlink':
      return img$3;

    case 'coinbaselink':
      return img$3;

    case 'fortmatic':
      return img$2;

    case 'portis':
      return img$1;

    case 'injected':
    default:
      return img;
  }
}

function useCopyClipboard() {
  var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isCopied = _useState2[0],
      setIsCopied = _useState2[1];

  var staticCopy = useCallback(function (text) {
    var didCopy = copy(text);
    setIsCopied(didCopy);
  }, []);
  useEffect(function () {
    if (isCopied) {
      var hide = setTimeout(function () {
        setIsCopied(false);
      }, timeout);
      return function () {
        clearTimeout(hide);
      };
    }

    return undefined;
  }, [isCopied, setIsCopied, timeout]);
  return [isCopied, staticCopy];
}

var _templateObject$b;
var LinkStyledButton = styled.button(_templateObject$b || (_templateObject$b = _taggedTemplateLiteral(["\n  border: none;\n  text-decoration: none;\n  background: none;\n  cursor: ", ";\n  color: ", ";\n  font-weight: 500;\n  :hover {\n    text-decoration: ", ";\n  }\n  :focus {\n    outline: none;\n    text-decoration: ", ";\n  }\n  :active {\n    text-decoration: none;\n  }\n"])), function (_ref) {
  var disabled = _ref.disabled;
  return disabled ? 'default' : 'pointer';
}, function (_ref2) {
  var theme = _ref2.theme,
      disabled = _ref2.disabled;
  return disabled ? theme.text2 : theme.primary1;
}, function (_ref3) {
  var disabled = _ref3.disabled;
  return disabled ? null : 'underline';
}, function (_ref4) {
  var disabled = _ref4.disabled;
  return disabled ? null : 'underline';
});

var _templateObject$a, _templateObject2$8;
var CopyIcon = styled(LinkStyledButton)(_templateObject$a || (_templateObject$a = _taggedTemplateLiteral(["\n  color: ", ";\n  flex-shrink: 0;\n  display: flex;\n  text-decoration: none;\n  font-size: 0.825rem;\n  :hover,\n  :active,\n  :focus {\n    text-decoration: none;\n    color: ", ";\n  }\n"])), function (_ref) {
  var theme = _ref.theme;
  return theme.text3;
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.text2;
});
var TransactionStatusText = styled.span(_templateObject2$8 || (_templateObject2$8 = _taggedTemplateLiteral(["\n  margin-left: 0.25rem;\n  font-size: 0.825rem;\n  ", ";\n  align-items: center;\n"])), function (_ref3) {
  var theme = _ref3.theme;
  return theme.flexRowNoWrap;
});
function CopyHelper(props) {
  var _useCopyClipboard = useCopyClipboard(),
      _useCopyClipboard2 = _slicedToArray(_useCopyClipboard, 2),
      isCopied = _useCopyClipboard2[0],
      setCopied = _useCopyClipboard2[1];

  return /*#__PURE__*/React__default.createElement(CopyIcon, {
    onClick: function onClick() {
      return setCopied(props.toCopy);
    }
  }, isCopied ? /*#__PURE__*/React__default.createElement(TransactionStatusText, null, /*#__PURE__*/React__default.createElement(CheckCircle, {
    size: '16'
  }), /*#__PURE__*/React__default.createElement(TransactionStatusText, null, "Copied")) : /*#__PURE__*/React__default.createElement(TransactionStatusText, null, /*#__PURE__*/React__default.createElement(Copy, {
    size: '16'
  })), isCopied ? '' : props.children);
}

var _templateObject$9;
var StyledIdenticonContainer = styled.div(_templateObject$9 || (_templateObject$9 = _taggedTemplateLiteral(["\n  height: 1rem;\n  width: 1rem;\n  border-radius: 1.125rem;\n  background-color: ", ";\n"])), function (_ref) {
  var theme = _ref.theme;
  return theme.bg4;
});
function Identicon() {
  var ref = useRef();

  var _useWeb = useWeb3(),
      account = _useWeb.account;

  useEffect(function () {
    if (account && ref.current) {
      ref.current.innerHTML = '';
      ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)));
    }
  }, [account]); // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451

  return /*#__PURE__*/React__default.createElement(StyledIdenticonContainer, {
    ref: ref
  });
}

var _templateObject$8, _templateObject2$7, _templateObject3$6;
var Text = function Text(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, ["children"]);

  return /*#__PURE__*/React__default.createElement(Default, props, children);
};
var Default = styled.span(_templateObject$8 || (_templateObject$8 = _taggedTemplateLiteral(["\n  color: ", ";\n  flex: ", ";\n  font-size: ", ";\n  font-family: 'Lato', sans-serif;\n"])), function (props) {
  return props.color || '#242A31';
}, function (props) {
  return props.flex;
}, function (props) {
  return props.size ? props.size + 'px' : '14px';
});
styled(Default)(_templateObject2$7 || (_templateObject2$7 = _taggedTemplateLiteral(["\n  font-weight: 500;\n"])));
styled(Default)(_templateObject3$6 || (_templateObject3$6 = _taggedTemplateLiteral(["\n  font-weight: bold;\n"])));

var _templateObject$7, _templateObject2$6, _templateObject3$5, _templateObject4$5, _templateObject5$5, _templateObject6$5, _templateObject7$3, _templateObject8$2, _templateObject9$2, _templateObject10$1, _templateObject11, _templateObject12, _templateObject13, _templateObject14;
var HeaderRow$1 = styled.div(_templateObject$7 || (_templateObject$7 = _taggedTemplateLiteral(["\n  ", ";\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ", ";\n  ", ";\n"])), function (_ref) {
  var theme = _ref.theme;
  return theme.flexRowNoWrap;
}, function (props) {
  return props.color === 'blue' ? function (_ref2) {
    var theme = _ref2.theme;
    return theme.primary1;
  } : 'inherit';
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.mediaWidth.upToMedium(_templateObject2$6 || (_templateObject2$6 = _taggedTemplateLiteral(["\n    padding: 1rem;\n  "])));
});
var UpperSection$1 = styled.div(_templateObject3$5 || (_templateObject3$5 = _taggedTemplateLiteral(["\n  position: relative;\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n"])));
var InfoCard$1 = styled.div(_templateObject4$5 || (_templateObject4$5 = _taggedTemplateLiteral(["\n  padding: 1rem;\n  border: 1px solid ", ";\n  border-radius: 20px;\n  position: relative;\n  display: grid;\n  grid-row-gap: 12px;\n  margin-bottom: 20px;\n"])), function (_ref4) {
  var theme = _ref4.theme;
  return theme.bg3;
});
var AccountGroupingRow = styled.div(_templateObject5$5 || (_templateObject5$5 = _taggedTemplateLiteral(["\n  ", ";\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 400;\n  color: ", ";\n  div {\n    ", "\n    align-items: center;\n  }\n"])), function (_ref5) {
  var theme = _ref5.theme;
  return theme.flexRowNoWrap;
}, function (_ref6) {
  var theme = _ref6.theme;
  return theme.text1;
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.flexRowNoWrap;
});
var AccountSection = styled.div(_templateObject6$5 || (_templateObject6$5 = _taggedTemplateLiteral(["\n  background-color: ", ";\n  padding: 0rem 1rem;\n  ", ";\n"])), function (_ref8) {
  var theme = _ref8.theme;
  return theme.bg1;
}, function (_ref9) {
  var theme = _ref9.theme;
  return theme.mediaWidth.upToMedium(_templateObject7$3 || (_templateObject7$3 = _taggedTemplateLiteral(["padding: 0rem 1rem 1.5rem 1rem;"])));
});
var YourAccount = styled.div(_templateObject8$2 || (_templateObject8$2 = _taggedTemplateLiteral(["\n  h5 {\n    margin: 0 0 1rem 0;\n    font-weight: 400;\n  }\n  h4 {\n    margin: 0;\n    font-weight: 500;\n  }\n"])));
var AccountControl = styled.div(_templateObject9$2 || (_templateObject9$2 = _taggedTemplateLiteral(["\n  display: flex;\n  justify-content: space-between;\n  min-width: 0;\n  width: 100%;\n  font-weight: 500;\n  font-size: 1.25rem;\n  a:hover {\n    text-decoration: underline;\n  }\n  p {\n    min-width: 0;\n    margin: 0;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n"])));
var CloseIcon$1 = styled.div(_templateObject10$1 || (_templateObject10$1 = _taggedTemplateLiteral(["\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n"])));
var IconWrapper$1 = styled.div(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["\n  ", ";\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n  & > img,\n  span {\n    height: ", ";\n    width: ", ";\n  }\n  ", ";\n"])), function (_ref10) {
  var theme = _ref10.theme;
  return theme.flexColumnNoWrap;
}, function (_ref11) {
  var size = _ref11.size;
  return size ? size + 'px' : '32px';
}, function (_ref12) {
  var size = _ref12.size;
  return size ? size + 'px' : '32px';
}, function (_ref13) {
  var theme = _ref13.theme;
  return theme.mediaWidth.upToMedium(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["\n    align-items: flex-end;\n  "])));
});
var WalletAction = styled.button(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral(["\n  margin-left: 8px;\n  padding: 4px 6px;\n  border: 1px solid #adcaf7;\n  border-radius: 12px;\n  background: #fff;\n  :hover {\n    cursor: pointer;\n    border-color: #4287f5;\n  }\n  :focus {\n    outline: none;\n  }\n"])));
var MainWalletAction = styled(WalletAction)(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral(["\n  color: ", ";\n"])), function (_ref14) {
  var theme = _ref14.theme;
  return theme.primary1;
});
function AccountDetails(_ref15) {
  var onClose = _ref15.onClose;
      _ref15.ENSName;
      var openOptions = _ref15.openOptions,
      supportedWallets = _ref15.supportedWallets;

  var _useWeb = useWeb3(),
      account = _useWeb.account,
      connector = _useWeb.connector;

  var injected = supportedWallets.injected,
      walletconnect = supportedWallets.walletconnect,
      walletlink = supportedWallets.walletlink,
      fortmatic = supportedWallets.fortmatic,
      portis = supportedWallets.portis;

  function formatConnectorName() {
    var _window = window,
        ethereum = _window.ethereum;
    var isMetaMask = !!(ethereum && ethereum.isMetaMask);
    var name = Object.keys(supportedWallets).filter(function (k) {
      return supportedWallets[k].connector === connector && (connector !== (injected === null || injected === void 0 ? void 0 : injected.connector) || isMetaMask === (k === 'metamask'));
    }).map(function (k) {
      return supportedWallets[k].name;
    })[0];
    return /*#__PURE__*/React__default.createElement(Text, {
      size: 14,
      color: "#888D9B"
    }, "Connected with ", name);
  }

  function getStatusIcon() {
    if (connector === (injected === null || injected === void 0 ? void 0 : injected.connector)) {
      return /*#__PURE__*/React__default.createElement(IconWrapper$1, {
        size: 16
      }, /*#__PURE__*/React__default.createElement(Identicon, null));
    } else if (connector === (walletconnect === null || walletconnect === void 0 ? void 0 : walletconnect.connector)) {
      return /*#__PURE__*/React__default.createElement(IconWrapper$1, {
        size: 16
      }, /*#__PURE__*/React__default.createElement("img", {
        src: img$4,
        alt: 'wallet connect logo'
      }));
    } else if (connector === (walletlink === null || walletlink === void 0 ? void 0 : walletlink.connector)) {
      return /*#__PURE__*/React__default.createElement(IconWrapper$1, {
        size: 16
      }, /*#__PURE__*/React__default.createElement("img", {
        src: img$3,
        alt: 'coinbase wallet logo'
      }));
    } else if (connector === (fortmatic === null || fortmatic === void 0 ? void 0 : fortmatic.connector)) {
      return /*#__PURE__*/React__default.createElement(IconWrapper$1, {
        size: 16
      }, /*#__PURE__*/React__default.createElement("img", {
        src: img$2,
        alt: 'fortmatic logo'
      }));
    } else if (connector === (portis === null || portis === void 0 ? void 0 : portis.connector)) {
      return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(IconWrapper$1, {
        size: 16
      }, /*#__PURE__*/React__default.createElement("img", {
        src: img$1,
        alt: 'portis logo'
      }), /*#__PURE__*/React__default.createElement(MainWalletAction, {
        onClick: function onClick() {
          portis.connector.portis.showPortis();
        }
      }, "Show Portis")));
    }

    return null;
  }

  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(UpperSection$1, null, /*#__PURE__*/React__default.createElement(CloseIcon$1, {
    onClick: onClose
  }, /*#__PURE__*/React__default.createElement(SvgX, null)), /*#__PURE__*/React__default.createElement(HeaderRow$1, null, /*#__PURE__*/React__default.createElement(Text, {
    size: 16
  }, "Account")), /*#__PURE__*/React__default.createElement(AccountSection, null, /*#__PURE__*/React__default.createElement(YourAccount, null, /*#__PURE__*/React__default.createElement(InfoCard$1, null, /*#__PURE__*/React__default.createElement(AccountGroupingRow, null, formatConnectorName(), /*#__PURE__*/React__default.createElement("div", null, connector !== (injected === null || injected === void 0 ? void 0 : injected.connector) && connector !== (walletlink === null || walletlink === void 0 ? void 0 : walletlink.connector) && /*#__PURE__*/React__default.createElement(WalletAction, {
    style: {
      marginRight: '8px'
    },
    onClick: function onClick() {
      connector.close();
    }
  }, /*#__PURE__*/React__default.createElement(Text, {
    size: 12,
    color: "#4287f5"
  }, "Disconnect")), /*#__PURE__*/React__default.createElement(WalletAction, {
    onClick: function onClick() {
      openOptions();
    }
  }, /*#__PURE__*/React__default.createElement(Text, {
    size: 12,
    color: "#4287f5"
  }, "Change")))), /*#__PURE__*/React__default.createElement(AccountGroupingRow, {
    id: "web3-account-identifier-row"
  }, /*#__PURE__*/React__default.createElement(AccountControl, null, /*#__PURE__*/React__default.createElement("div", null, getStatusIcon(), /*#__PURE__*/React__default.createElement(Text, {
    size: 20
  }, " ", account && shortenAddress(account)), /*#__PURE__*/React__default.createElement(CopyHelper, {
    toCopy: account
  })))))))));
}

var SUPPORTED_WALLETS = {
  injected: {
    name: 'Injected',
    iconName: 'arrow-right.svg',
    description: 'Injected web3 provider.',
    href: null,
    color: '#010101',
    primary: true
  },
  metamask: {
    name: 'MetaMask',
    iconName: 'metamask.png',
    description: 'Easy-to-use browser extension.',
    href: null,
    color: '#E8831D'
  },
  walletconnect: {
    name: 'WalletConnect',
    iconName: 'walletConnectIcon.svg',
    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',
    href: null,
    color: '#4196FC',
    mobile: true
  },
  walletlink: {
    name: 'Coinbase Wallet',
    iconName: 'coinbaseWalletIcon.svg',
    description: 'Use Coinbase Wallet app on mobile device',
    href: null,
    color: '#315CF5'
  },
  coinbaselink: {
    name: 'Open in Coinbase Wallet',
    iconName: 'coinbaseWalletIcon.svg',
    description: 'Open in Coinbase Wallet app.',
    href: 'https://go.cb-w.com/mtUDhEZPy1',
    color: '#315CF5',
    mobile: true,
    mobileOnly: true
  },
  fortmatic: {
    name: 'Fortmatic',
    iconName: 'fortmaticIcon.png',
    description: 'Login using Fortmatic hosted wallet',
    href: null,
    color: '#6748FF',
    mobile: true
  },
  portis: {
    name: 'Portis',
    iconName: 'portisIcon.png',
    description: 'Login using Portis hosted wallet',
    href: null,
    color: '#4A6C9B',
    mobile: true
  }
};

var connectors = {
  injected: InjectedConnector,
  walletconnect: WalletConnectConnector,
  walletlink: WalletLinkConnector,
  fortmatic: FortmaticConnector,
  portis: PortisConnector
};
function getSupportedWallets(config) {
  var injected = new connectors['injected']({
    supportedChainIds: config.supportedChainIds
  });
  var supportedWallets = {
    injected: _objectSpread2({
      connector: injected
    }, SUPPORTED_WALLETS['injected']),
    metamask: _objectSpread2({
      connector: injected
    }, SUPPORTED_WALLETS['metamask'])
  };
  Object.keys(config.connectors).forEach(function (key) {
    supportedWallets[key] = _objectSpread2({
      connector: new connectors[key](config.connectors[key])
    }, SUPPORTED_WALLETS[key]);
  });
  return supportedWallets;
}

var _templateObject$6, _templateObject2$5, _templateObject3$4, _templateObject4$4, _templateObject5$4, _templateObject6$4, _templateObject7$2;
var AnimatedDialogOverlay = animated(DialogOverlay);
var StyledDialogOverlay = styled(AnimatedDialogOverlay)(_templateObject$6 || (_templateObject$6 = _taggedTemplateLiteral(["\n  &[data-reach-dialog-overlay] {\n    z-index: 2;\n    background-color: transparent;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: ", ";\n  }\n"])), function (_ref) {
  var theme = _ref.theme;
  return theme.modalBG;
});
var AnimatedDialogContent = animated(DialogContent); // destructure to not pass custom props to Dialog DOM element

var StyledDialogContent = styled(function (_ref2) {
  _ref2.minHeight;
      _ref2.maxHeight;
      _ref2.mobile;
      _ref2.isOpen;
      var rest = _objectWithoutProperties(_ref2, ["minHeight", "maxHeight", "mobile", "isOpen"]);

  return /*#__PURE__*/React__default.createElement(AnimatedDialogContent, rest);
}).attrs({
  'aria-label': 'dialog'
})(_templateObject2$5 || (_templateObject2$5 = _taggedTemplateLiteral(["\n  overflow-y: ", ";\n  &[data-reach-dialog-content] {\n    margin: 0 0 2rem 0;\n    background-color: ", ";\n    box-shadow: 0 4px 8px 0 ", ";\n    padding: 0px;\n    width: 50vw;\n    overflow-y: ", ";\n    overflow-x: hidden;\n    align-self: ", ";\n    max-width: 420px;\n    ", "\n    ", "\n    display: flex;\n    border-radius: 20px;\n    ", "\n    ", "\n  }\n"])), function (_ref3) {
  var mobile = _ref3.mobile;
  return mobile ? 'scroll' : 'hidden';
}, function (_ref4) {
  var theme = _ref4.theme;
  return theme.bg1;
}, function (_ref5) {
  var theme = _ref5.theme;
  return transparentize(0.95, theme.shadow1);
}, function (_ref6) {
  var mobile = _ref6.mobile;
  return mobile ? 'scroll' : 'hidden';
}, function (_ref7) {
  var mobile = _ref7.mobile;
  return mobile ? 'flex-end' : 'center';
}, function (_ref8) {
  var maxHeight = _ref8.maxHeight;
  return maxHeight && css(_templateObject3$4 || (_templateObject3$4 = _taggedTemplateLiteral(["\n        max-height: ", "vh;\n      "])), maxHeight);
}, function (_ref9) {
  var minHeight = _ref9.minHeight;
  return minHeight && css(_templateObject4$4 || (_templateObject4$4 = _taggedTemplateLiteral(["\n        min-height: ", "vh;\n      "])), minHeight);
}, function (_ref10) {
  var theme = _ref10.theme;
  return theme.mediaWidth.upToMedium(_templateObject5$4 || (_templateObject5$4 = _taggedTemplateLiteral(["\n      width: 65vw;\n      margin: 0;\n    "])));
}, function (_ref11) {
  var theme = _ref11.theme,
      mobile = _ref11.mobile;
  return theme.mediaWidth.upToSmall(_templateObject6$4 || (_templateObject6$4 = _taggedTemplateLiteral(["\n      width:  85vw;\n      ", "\n    "])), mobile && css(_templateObject7$2 || (_templateObject7$2 = _taggedTemplateLiteral(["\n          width: 100vw;\n          border-radius: 20px;\n          border-bottom-left-radius: 0;\n          border-bottom-right-radius: 0;\n        "]))));
});
function Modal(_ref12) {
  var isOpen = _ref12.isOpen,
      onDismiss = _ref12.onDismiss,
      _ref12$minHeight = _ref12.minHeight,
      minHeight = _ref12$minHeight === void 0 ? false : _ref12$minHeight,
      _ref12$maxHeight = _ref12.maxHeight,
      maxHeight = _ref12$maxHeight === void 0 ? 90 : _ref12$maxHeight,
      initialFocusRef = _ref12.initialFocusRef,
      children = _ref12.children;
  var fadeTransition = useTransition(isOpen, null, {
    config: {
      duration: 50
    },
    from: {
      opacity: 0
    },
    enter: {
      opacity: 1
    },
    leave: {
      opacity: 0
    }
  });

  var _useSpring = useSpring(function () {
    return {
      y: 0,
      config: {
        mass: 1,
        tension: 210,
        friction: 20
      }
    };
  }),
      _useSpring2 = _slicedToArray(_useSpring, 2),
      y = _useSpring2[0].y,
      set = _useSpring2[1];

  var bind = useGesture({
    onDrag: function onDrag(state) {
      set({
        y: state.down ? state.movement[1] : 0
      });

      if (state.movement[1] > 300 || state.velocity > 3 && state.direction[1] > 0) {
        onDismiss();
      }
    }
  });
  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, fadeTransition.map(function (_ref13) {
    var item = _ref13.item,
        key = _ref13.key,
        props = _ref13.props;
    return item && /*#__PURE__*/React__default.createElement(StyledDialogOverlay, {
      key: key,
      style: props,
      onDismiss: onDismiss,
      initialFocusRef: initialFocusRef,
      unstable_lockFocusAcrossFrames: false
    }, /*#__PURE__*/React__default.createElement(StyledDialogContent, _extends$1({}, isMobile ? _objectSpread2(_objectSpread2({}, bind()), {}, {
      style: {
        transform: y.interpolate(function (y) {
          return "translateY(".concat(y > 0 ? y : 0, "px)");
        })
      }
    }) : {}, {
      "aria-label": "dialog content",
      minHeight: minHeight,
      maxHeight: maxHeight,
      mobile: isMobile
    }), !initialFocusRef && isMobile ? /*#__PURE__*/React__default.createElement("div", {
      tabIndex: 1
    }) : null, children));
  }));
}

var _templateObject$5;
var StyledLink = styled.a(_templateObject$5 || (_templateObject$5 = _taggedTemplateLiteral(["\n  text-decoration: none;\n  cursor: pointer;\n  color: ", ";\n  font-weight: 500;\n  :hover {\n    text-decoration: underline;\n  }\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n  :active {\n    text-decoration: none;\n  }\n"])), function (_ref) {
  var theme = _ref.theme;
  return theme.primary1;
});
function ExternalLink(_ref2) {
  var _ref2$target = _ref2.target,
      target = _ref2$target === void 0 ? '_blank' : _ref2$target,
      href = _ref2.href,
      _ref2$rel = _ref2.rel,
      rel = _ref2$rel === void 0 ? 'noopener noreferrer' : _ref2$rel,
      rest = _objectWithoutProperties(_ref2, ["target", "href", "rel"]);

  return /*#__PURE__*/React.createElement(StyledLink, _extends$1({
    target: target,
    rel: rel,
    href: href
  }, rest));
}

var _templateObject$4, _templateObject2$4, _templateObject3$3, _templateObject4$3, _templateObject5$3, _templateObject6$3, _templateObject7$1, _templateObject8$1, _templateObject9$1;
var InfoCard = styled.button(_templateObject$4 || (_templateObject$4 = _taggedTemplateLiteral(["\n  background-color: ", ";\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  border-color: ", ";\n"])), function (_ref) {
  var active = _ref.active;
  return active ? '#F7F8FA' : '#fff';
}, function (_ref2) {
  var theme = _ref2.theme,
      active = _ref2.active;
  return active ? 'transparent' : theme.bg3;
});
var OptionCard = styled(InfoCard)(_templateObject2$4 || (_templateObject2$4 = _taggedTemplateLiteral(["\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 2rem;\n  padding: 1rem;\n"])));
var OptionCardLeft = styled.div(_templateObject3$3 || (_templateObject3$3 = _taggedTemplateLiteral(["\n  ", ";\n  justify-content: center;\n  height: 100%;\n"])), function (_ref3) {
  var theme = _ref3.theme;
  return theme.flexColumnNoWrap;
});
var OptionCardClickable = styled(OptionCard)(_templateObject4$3 || (_templateObject4$3 = _taggedTemplateLiteral(["\n  margin-top: 0;\n  &:hover {\n    cursor: ", ";\n    border: ", ";\n  }\n  opacity: ", ";\n"])), function (_ref4) {
  var clickable = _ref4.clickable;
  return clickable ? 'pointer' : '';
}, function (_ref5) {
  var clickable = _ref5.clickable;
  return clickable ? '1px solid #4287f5' : "";
}, function (_ref6) {
  var disabled = _ref6.disabled;
  return disabled ? '0.5' : '1';
});
var GreenCircle = styled.div(_templateObject5$3 || (_templateObject5$3 = _taggedTemplateLiteral(["\n  ", "\n  justify-content: center;\n  align-items: center;\n  &:first-child {\n    height: 8px;\n    width: 8px;\n    margin-right: 8px;\n    background-color: ", ";\n    border-radius: 50%;\n  }\n"])), function (_ref7) {
  var theme = _ref7.theme;
  return theme.flexRowNoWrap;
}, function (_ref8) {
  var theme = _ref8.theme;
  return theme.green1;
});
var CircleWrapper = styled.div(_templateObject6$3 || (_templateObject6$3 = _taggedTemplateLiteral(["\n  color: ", ";\n  display: flex;\n  justify-content: center;\n  align-items: center;\n"])), function (_ref9) {
  var theme = _ref9.theme;
  return theme.green1;
});
var HeaderText = styled.div(_templateObject7$1 || (_templateObject7$1 = _taggedTemplateLiteral(["\n  ", ";\n  color: ", ";\n  font-size: 1rem;\n  font-weight: 500;\n"])), function (_ref10) {
  var theme = _ref10.theme;
  return theme.flexRowNoWrap;
}, function (props) {
  return props.color === 'blue' ? function (_ref11) {
    var theme = _ref11.theme;
    return theme.primary1;
  } : function (_ref12) {
    var theme = _ref12.theme;
    return theme.text1;
  };
});
var IconWrapper = styled.div(_templateObject8$1 || (_templateObject8$1 = _taggedTemplateLiteral(["\n  ", ";\n  align-items: center;\n  justify-content: center;\n  & > img,\n  span {\n    height: ", ";\n    width: ", ";\n  }\n  ", ";\n"])), function (_ref13) {
  var theme = _ref13.theme;
  return theme.flexColumnNoWrap;
}, function (_ref14) {
  var size = _ref14.size;
  return size ? size + 'px' : '24px';
}, function (_ref15) {
  var size = _ref15.size;
  return size ? size + 'px' : '24px';
}, function (_ref16) {
  var theme = _ref16.theme;
  return theme.mediaWidth.upToMedium(_templateObject9$1 || (_templateObject9$1 = _taggedTemplateLiteral(["\n    align-items: flex-end;\n  "])));
});
function Option(_ref17) {
  var _ref17$link = _ref17.link,
      link = _ref17$link === void 0 ? null : _ref17$link,
      _ref17$clickable = _ref17.clickable,
      clickable = _ref17$clickable === void 0 ? true : _ref17$clickable,
      size = _ref17.size,
      _ref17$onClick = _ref17.onClick,
      onClick = _ref17$onClick === void 0 ? null : _ref17$onClick,
      color = _ref17.color,
      header = _ref17.header,
      _ref17$subheader = _ref17.subheader,
      subheader = _ref17$subheader === void 0 ? null : _ref17$subheader,
      icon = _ref17.icon,
      _ref17$active = _ref17.active,
      active = _ref17$active === void 0 ? false : _ref17$active,
      id = _ref17.id;
  var content = /*#__PURE__*/React__default.createElement(OptionCardClickable, {
    id: id,
    onClick: onClick,
    clickable: clickable && !active,
    active: active
  }, /*#__PURE__*/React__default.createElement(OptionCardLeft, null, /*#__PURE__*/React__default.createElement(HeaderText, {
    color: color
  }, active ? /*#__PURE__*/React__default.createElement(CircleWrapper, null, /*#__PURE__*/React__default.createElement(GreenCircle, null, /*#__PURE__*/React__default.createElement("div", null))) : '', /*#__PURE__*/React__default.createElement(Text, {
    size: 16
  }, header)), subheader && /*#__PURE__*/React__default.createElement(Text, {
    size: 12,
    style: {
      marginTop: 8
    }
  }, subheader)), /*#__PURE__*/React__default.createElement(IconWrapper, {
    size: size
  }, /*#__PURE__*/React__default.createElement("img", {
    src: icon,
    alt: 'Icon'
  })));

  if (link) {
    return /*#__PURE__*/React__default.createElement(ExternalLink, {
      href: link
    }, content);
  }

  return content;
}

var _templateObject$3, _templateObject2$3;
var rotate = keyframes(_templateObject$3 || (_templateObject$3 = _taggedTemplateLiteral(["\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n"])));
var StyledSVG = styled.svg(_templateObject2$3 || (_templateObject2$3 = _taggedTemplateLiteral(["\n  animation: 2s ", " linear infinite;\n  height: ", ";\n  width: ", ";\n  path {\n    stroke: ", ";\n  }\n"])), rotate, function (_ref) {
  var size = _ref.size;
  return size;
}, function (_ref2) {
  var size = _ref2.size;
  return size;
}, function (_ref3) {
  var stroke = _ref3.stroke;
  return stroke !== null && stroke !== void 0 ? stroke : '#4287f5';
});
/**
 * Takes in custom size and stroke for circle color, default to primary color as fill,
 * need ...rest for layered styles on top
 */

function Loader(_ref4) {
  var _ref4$size = _ref4.size,
      size = _ref4$size === void 0 ? '16px' : _ref4$size,
      stroke = _ref4.stroke,
      rest = _objectWithoutProperties(_ref4, ["size", "stroke"]);

  return /*#__PURE__*/React__default.createElement(StyledSVG, _extends$1({
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    size: size,
    stroke: stroke
  }, rest), /*#__PURE__*/React__default.createElement("path", {
    d: "M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5",
    strokeWidth: "2.5",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  }));
}

var _templateObject$2, _templateObject2$2, _templateObject3$2, _templateObject4$2, _templateObject5$2, _templateObject6$2;
var PendingSection = styled.div(_templateObject$2 || (_templateObject$2 = _taggedTemplateLiteral(["\n  ", ";\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  & > * {\n    width: 100%;\n  }\n"])), function (_ref) {
  var theme = _ref.theme;
  return theme.flexColumnNoWrap;
});
var StyledLoader = styled(Loader)(_templateObject2$2 || (_templateObject2$2 = _taggedTemplateLiteral(["\n  margin-right: 1rem;\n"])));
var LoadingMessage = styled.div(_templateObject3$2 || (_templateObject3$2 = _taggedTemplateLiteral(["\n  ", ";\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: 12px;\n  margin-bottom: 20px;\n  color: ", ";\n  border: 1px solid ", ";\n  & > * {\n    padding: 1rem;\n  }\n  height: 50px;\n"])), function (_ref2) {
  var theme = _ref2.theme;
  return theme.flexRowNoWrap;
}, function (_ref3) {
  var theme = _ref3.theme,
      error = _ref3.error;
  return error ? theme.red1 : 'inherit';
}, function (_ref4) {
  var theme = _ref4.theme,
      error = _ref4.error;
  return error ? theme.red1 : theme.text4;
});
var ErrorGroup = styled.div(_templateObject4$2 || (_templateObject4$2 = _taggedTemplateLiteral(["\n  ", ";\n  align-items: center;\n  justify-content: flex-start;\n"])), function (_ref5) {
  var theme = _ref5.theme;
  return theme.flexRowNoWrap;
});
var LoadingWrapper = styled.div(_templateObject5$2 || (_templateObject5$2 = _taggedTemplateLiteral(["\n  ", ";\n  align-items: center;\n  justify-content: center;\n"])), function (_ref6) {
  var theme = _ref6.theme;
  return theme.flexRowNoWrap;
});
var ErrorButton = styled.button(_templateObject6$2 || (_templateObject6$2 = _taggedTemplateLiteral(["\n  margin-left: 8px;\n  padding: 4px 6px;\n  border: 1px solid #cfcfcf;\n  border-radius: 12px;\n  background: #fff;\n  :hover {\n    cursor: pointer;\n    border-color: #999999;\n  }\n"])));
function PendingView(_ref7) {
  var _window, _window$ethereum;

  var connector = _ref7.connector,
      _ref7$error = _ref7.error,
      error = _ref7$error === void 0 ? false : _ref7$error,
      setPendingError = _ref7.setPendingError,
      tryActivation = _ref7.tryActivation,
      supportedWallets = _ref7.supportedWallets;
  var isMetamask = (_window = window) === null || _window === void 0 ? void 0 : (_window$ethereum = _window.ethereum) === null || _window$ethereum === void 0 ? void 0 : _window$ethereum.isMetaMask;
  return /*#__PURE__*/React__default.createElement(PendingSection, null, /*#__PURE__*/React__default.createElement(LoadingMessage, {
    error: error
  }, /*#__PURE__*/React__default.createElement(LoadingWrapper, null, error ? /*#__PURE__*/React__default.createElement(ErrorGroup, null, /*#__PURE__*/React__default.createElement(Text, {
    size: 16,
    color: "#FD4040"
  }, "Error connecting."), /*#__PURE__*/React__default.createElement(ErrorButton, {
    onClick: function onClick() {
      setPendingError(false);
      connector && tryActivation(connector);
    }
  }, /*#__PURE__*/React__default.createElement(Text, {
    size: 12
  }, "Try again"))) : /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(StyledLoader, null), /*#__PURE__*/React__default.createElement(Text, {
    size: 16
  }, "Initializing...")))), Object.keys(supportedWallets).map(function (key) {
    var option = supportedWallets[key];

    if (option.connector === connector) {
      if (option.connector === supportedWallets['injected'].connector) {
        if (isMetamask && option.name !== 'MetaMask') {
          return null;
        }

        if (!isMetamask && option.name === 'MetaMask') {
          return null;
        }
      }

      return /*#__PURE__*/React__default.createElement(Option, {
        id: "connect-".concat(key),
        key: key,
        clickable: false,
        color: option.color,
        header: option.name,
        subheader: option.description,
        icon: getWalletIcon(key)
      });
    }

    return null;
  }));
}

var _templateObject$1, _templateObject2$1, _templateObject3$1, _templateObject4$1, _templateObject5$1, _templateObject6$1, _templateObject7, _templateObject8, _templateObject9, _templateObject10;
var CloseIcon = styled.div(_templateObject$1 || (_templateObject$1 = _taggedTemplateLiteral(["\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n"])));
var Wrapper = styled.div(_templateObject2$1 || (_templateObject2$1 = _taggedTemplateLiteral(["\n  ", "\n  margin: 0;\n  padding: 0;\n  width: 100%;\n"])), function (_ref) {
  var theme = _ref.theme;
  return theme.flexColumnNoWrap;
});
var HeaderRow = styled.div(_templateObject3$1 || (_templateObject3$1 = _taggedTemplateLiteral(["\n  ", ";\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ", ";\n  ", ";\n"])), function (_ref2) {
  var theme = _ref2.theme;
  return theme.flexRowNoWrap;
}, function (props) {
  return props.color === 'blue' ? function (_ref3) {
    var theme = _ref3.theme;
    return theme.primary1;
  } : 'inherit';
}, function (_ref4) {
  var theme = _ref4.theme;
  return theme.mediaWidth.upToMedium(_templateObject4$1 || (_templateObject4$1 = _taggedTemplateLiteral(["\n    padding: 1rem;\n  "])));
});
var ContentWrapper = styled.div(_templateObject5$1 || (_templateObject5$1 = _taggedTemplateLiteral(["\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  ", ";\n"])), function (_ref5) {
  var theme = _ref5.theme;
  return theme.mediaWidth.upToMedium(_templateObject6$1 || (_templateObject6$1 = _taggedTemplateLiteral(["padding: 1rem"])));
});
var UpperSection = styled.div(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n  position: relative;\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n"])));
var OptionGrid = styled.div(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n  display: grid;\n  grid-gap: 10px;\n  ", ";\n"])), function (_ref6) {
  var theme = _ref6.theme;
  return theme.mediaWidth.upToMedium(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  "])));
});
var HoverText = styled.div(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n  :hover {\n    cursor: pointer;\n  }\n"])));
var WALLET_VIEWS = {
  OPTIONS: 'options',
  OPTIONS_SECONDARY: 'options_secondary',
  ACCOUNT: 'account',
  PENDING: 'pending'
};
function WalletModal(_ref7) {
  var config = _ref7.config,
      isOpen = _ref7.isOpen,
      onClose = _ref7.onClose;

  // important that these are destructed from the account-specific web3-react context
  var _useWeb3React = useWeb3React(),
      active = _useWeb3React.active,
      account = _useWeb3React.account,
      connector = _useWeb3React.connector,
      activate = _useWeb3React.activate,
      error = _useWeb3React.error;

  var _useState = useState(WALLET_VIEWS.ACCOUNT),
      _useState2 = _slicedToArray(_useState, 2),
      walletView = _useState2[0],
      setWalletView = _useState2[1];

  var _useState3 = useState(),
      _useState4 = _slicedToArray(_useState3, 2),
      pendingWallet = _useState4[0],
      setPendingWallet = _useState4[1];

  var _useState5 = useState(),
      _useState6 = _slicedToArray(_useState5, 2),
      pendingError = _useState6[0],
      setPendingError = _useState6[1];

  var previousAccount = usePrevious(account);

  var _useState7 = useState({}),
      _useState8 = _slicedToArray(_useState7, 2),
      supportedWallets = _useState8[0],
      setSupportedWallets = _useState8[1];

  var fortmatic = supportedWallets.fortmatic,
      portis = supportedWallets.portis,
      injected = supportedWallets.injected;
  useEffect(function () {
    var supportedWallets = getSupportedWallets(config);
    setSupportedWallets(supportedWallets);
  }, [config]); // close on connection, when logged out before

  useEffect(function () {
    if (account && !previousAccount && isOpen) {
      onClose();
    }
  }, [account, previousAccount, onClose, isOpen]); // always reset to account view

  useEffect(function () {
    if (isOpen) {
      setPendingError(false);
      setWalletView(WALLET_VIEWS.ACCOUNT);
    }
  }, [isOpen]); // close modal when a connection is successful

  var activePrevious = usePrevious(active);
  var connectorPrevious = usePrevious(connector);
  useEffect(function () {
    if (isOpen && (active && !activePrevious || connector && connector !== connectorPrevious && !error)) {
      setWalletView(WALLET_VIEWS.ACCOUNT);
    }
  }, [setWalletView, active, error, connector, isOpen, activePrevious, connectorPrevious]);

  var tryActivation = /*#__PURE__*/function () {
    var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(connector) {
      var _connector$walletConn, _connector$walletConn2;

      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              Object.keys(supportedWallets).map(function (key) {
                if (connector === supportedWallets[key].connector) {
                  return supportedWallets[key].name;
                }

                return true;
              });
              setPendingWallet(connector); // set wallet for pending view

              setWalletView(WALLET_VIEWS.PENDING); // if the connector is walletconnect and the user has already tried to connect, manually reset the connector

              if (connector instanceof WalletConnectConnector && (_connector$walletConn = connector.walletConnectProvider) !== null && _connector$walletConn !== void 0 && (_connector$walletConn2 = _connector$walletConn.wc) !== null && _connector$walletConn2 !== void 0 && _connector$walletConn2.uri) {
                connector.walletConnectProvider = undefined;
              }

              connector && activate(connector, undefined, true)["catch"](function (error) {
                if (error instanceof UnsupportedChainIdError) {
                  activate(connector); // a little janky...can't use setError because the connector isn't set
                } else {
                  setPendingError(true);
                }
              });

            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function tryActivation(_x) {
      return _ref8.apply(this, arguments);
    };
  }(); // close wallet modal if fortmatic modal is active


  useEffect(function () {
    fortmatic === null || fortmatic === void 0 ? void 0 : fortmatic.connector.on(OVERLAY_READY, function () {
      onClose();
    });
  }, [onClose, fortmatic]); // get wallets user can switch too, depending on device/browser

  function getOptions() {
    var isMetamask = window.ethereum && window.ethereum.isMetaMask;
    return Object.keys(supportedWallets).map(function (key) {
      var option = supportedWallets[key]; // check for mobile options

      if (isMobile) {
        //disable portis on mobile for now
        if (option.connector === portis.connector) {
          return null;
        }

        if (!window.web3 && !window.ethereum && option.mobile) {
          return /*#__PURE__*/React__default.createElement(Option, {
            onClick: function onClick() {
              option.connector !== connector && !option.href && tryActivation(option.connector);
            },
            id: "connect-".concat(key),
            key: key,
            active: option.connector && option.connector === connector,
            color: option.color,
            link: option.href,
            header: option.name,
            subheader: null,
            icon: getWalletIcon(key)
          });
        }

        return null;
      } // overwrite injected when needed


      if (option.connector === (injected === null || injected === void 0 ? void 0 : injected.connector)) {
        // don't show injected if there's no injected provider
        if (!(window.web3 || window.ethereum)) {
          if (option.name === 'MetaMask') {
            return /*#__PURE__*/React__default.createElement(Option, {
              id: "connect-".concat(key),
              key: key,
              color: '#E8831D',
              header: 'Install Metamask',
              subheader: null,
              link: 'https://metamask.io/',
              icon: img$5
            });
          } else {
            return null; //dont want to return install twice
          }
        } // don't return metamask if injected provider isn't metamask
        else if (option.name === 'MetaMask' && !isMetamask) {
            return null;
          } // likewise for generic
          else if (option.name === 'Injected' && isMetamask) {
              return null;
            }
      } // return rest of options


      return !isMobile && !option.mobileOnly && /*#__PURE__*/React__default.createElement(Option, {
        id: "connect-".concat(key),
        onClick: function onClick() {
          option.connector === connector ? setWalletView(WALLET_VIEWS.ACCOUNT) : !option.href && tryActivation(option.connector);
        },
        key: key,
        active: option.connector === connector,
        color: option.color,
        link: option.href,
        header: option.name,
        subheader: null //use option.descriptio to bring back multi-line
        ,
        icon: getWalletIcon(key)
      });
    });
  }

  function getModalContent() {
    if (error) {
      return /*#__PURE__*/React__default.createElement(UpperSection, null, /*#__PURE__*/React__default.createElement(CloseIcon, {
        onClick: onClose
      }, /*#__PURE__*/React__default.createElement(SvgX, null)), /*#__PURE__*/React__default.createElement(HeaderRow, null, error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error connecting'), /*#__PURE__*/React__default.createElement(ContentWrapper, null, error instanceof UnsupportedChainIdError ? /*#__PURE__*/React__default.createElement("h5", null, "Please connect to the appropriate Ethereum network.") : 'Error connecting. Try refreshing the page.'));
    }

    if (account && walletView === WALLET_VIEWS.ACCOUNT) {
      return /*#__PURE__*/React__default.createElement(AccountDetails, {
        onClose: onClose,
        openOptions: function openOptions() {
          return setWalletView(WALLET_VIEWS.OPTIONS);
        },
        supportedWallets: supportedWallets
      });
    }

    return /*#__PURE__*/React__default.createElement(UpperSection, null, /*#__PURE__*/React__default.createElement(CloseIcon, {
      onClick: onClose
    }, /*#__PURE__*/React__default.createElement(SvgX, null)), walletView !== WALLET_VIEWS.ACCOUNT ? /*#__PURE__*/React__default.createElement(HeaderRow, {
      color: "blue"
    }, /*#__PURE__*/React__default.createElement(HoverText, {
      onClick: function onClick() {
        setPendingError(false);
        setWalletView(WALLET_VIEWS.ACCOUNT);
      }
    }, /*#__PURE__*/React__default.createElement(Text, {
      size: 16,
      color: "#4287f5"
    }, "Back"))) : /*#__PURE__*/React__default.createElement(HeaderRow, null, /*#__PURE__*/React__default.createElement(HoverText, null, /*#__PURE__*/React__default.createElement(Text, {
      size: 16
    }, "Connect to a wallet"))), /*#__PURE__*/React__default.createElement(ContentWrapper, null, walletView === WALLET_VIEWS.PENDING ? /*#__PURE__*/React__default.createElement(PendingView, {
      connector: pendingWallet,
      error: pendingError,
      setPendingError: setPendingError,
      tryActivation: tryActivation,
      supportedWallets: supportedWallets
    }) : /*#__PURE__*/React__default.createElement(OptionGrid, null, getOptions())));
  }

  return /*#__PURE__*/React__default.createElement(Modal, {
    isOpen: isOpen,
    onDismiss: onClose,
    minHeight: false,
    maxHeight: 90
  }, /*#__PURE__*/React__default.createElement(Wrapper, null, getModalContent()));
}

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;
var MEDIA_WIDTHS = {
  upToExtraSmall: 500,
  upToSmall: 720,
  upToMedium: 960,
  upToLarge: 1280
};
var mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce(function (accumulator, size) {

  accumulator[size] = function (a, b, c) {
    return css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      @media (max-width: ", "px) {\n        ", "\n      }\n    "])), MEDIA_WIDTHS[size], css(a, b, c));
  };

  return accumulator;
}, {});
var white = '#FFFFFF';
var black = '#000000';
function colors(darkMode) {
  return {
    // base
    white: white,
    black: black,
    // text
    text1: darkMode ? '#FFFFFF' : '#000000',
    text2: darkMode ? '#C3C5CB' : '#565A69',
    text3: darkMode ? '#6C7284' : '#888D9B',
    text4: darkMode ? '#565A69' : '#C3C5CB',
    text5: darkMode ? '#2C2F36' : '#EDEEF2',
    // backgrounds / greys
    bg1: darkMode ? '#212429' : '#FFFFFF',
    bg2: darkMode ? '#2C2F36' : '#F7F8FA',
    bg3: darkMode ? '#40444F' : '#EDEEF2',
    bg4: darkMode ? '#565A69' : '#CED0D9',
    bg5: darkMode ? '#6C7284' : '#888D9B',
    //specialty colors
    modalBG: darkMode ? 'rgba(0,0,0,.425)' : 'rgba(0,0,0,0.3)',
    advancedBG: darkMode ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.6)',
    //primary colors
    primary1: darkMode ? '#2172E5' : '#ff007a',
    primary2: darkMode ? '#3680E7' : '#FF8CC3',
    primary3: darkMode ? '#4D8FEA' : '#FF99C9',
    primary4: darkMode ? '#376bad70' : '#F6DDE8',
    primary5: darkMode ? '#153d6f70' : '#FDEAF1',
    // color text
    primaryText1: darkMode ? '#6da8ff' : '#ff007a',
    // secondary colors
    secondary1: darkMode ? '#2172E5' : '#ff007a',
    secondary2: darkMode ? '#17000b26' : '#F6DDE8',
    secondary3: darkMode ? '#17000b26' : '#FDEAF1',
    // other
    red1: '#FD4040',
    red2: '#F82D3A',
    red3: '#D60000',
    green1: '#27AE60',
    yellow1: '#FFE270',
    yellow2: '#F3841E',
    blue1: '#2172E5' // dont wanna forget these blue yet
    // blue4: darkMode ? '#153d6f70' : '#C4D9F8',
    // blue5: darkMode ? '#153d6f70' : '#EBF4FF',

  };
}
function theme(darkMode) {
  return _objectSpread2(_objectSpread2({}, colors(darkMode)), {}, {
    grids: {
      sm: 8,
      md: 12,
      lg: 24
    },
    //shadows
    shadow1: darkMode ? '#000' : '#2F80ED',
    // media queries
    mediaWidth: mediaWidthTemplates,
    // css snippets
    flexColumnNoWrap: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n      display: flex;\n      flex-flow: column nowrap;\n    "]))),
    flexRowNoWrap: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n      display: flex;\n      flex-flow: row nowrap;\n    "])))
  });
}
function ThemeProvider(_ref) {
  var children = _ref.children;
  var themeObject = theme(false);
  return /*#__PURE__*/React__default.createElement(ThemeProvider$1, {
    theme: themeObject
  }, children);
}
styled(Text$1)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  color: ", ";\n"])), function (_ref2) {
  var color = _ref2.color,
      theme = _ref2.theme;
  return theme[color];
});
createGlobalStyle(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\nhtml, input, textarea, button {\n  font-family: 'Inter', sans-serif;\n  font-display: fallback;\n}\n@supports (font-variation-settings: normal) {\n  html, input, textarea, button {\n    font-family: 'Inter var', sans-serif;\n  }\n}\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n}\n a {\n   color: ", "; \n }\n* {\n  box-sizing: border-box;\n}\nbutton {\n  user-select: none;\n}\nhtml {\n  font-size: 16px;\n  font-variant: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  font-feature-settings: 'ss01' on, 'ss02' on, 'cv01' on, 'cv03' on;\n  \n}\n"])), colors(false).blue1);
createGlobalStyle(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\nhtml {\n  color: ", ";\n  background-color: ", ";\n}\nbody {\n  min-height: 100vh;\n  background-position: 0 -30vh;\n  background-repeat: no-repeat;\n  background-image: ", ";\n}\n"])), function (_ref4) {
  var theme = _ref4.theme;
  return theme.text1;
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.bg2;
}, function (_ref6) {
  var theme = _ref6.theme;
  return "radial-gradient(50% 50% at 50% 50%, ".concat(transparentize(0.9, theme.primary1), " 0%, ").concat(transparentize(1, theme.bg1), " 100%)");
});

function getLibrary(provider) {
  var library = new ethers.providers.Web3Provider(provider);
  library.pollingInterval = 1000;
  return library;
}

var Web3Context = /*#__PURE__*/createContext({});

var Web3ContextProvider = function Web3ContextProvider(_ref) {
  var config = _ref.config,
      children = _ref.children;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      showModal = _useState2[0],
      setShowModal = _useState2[1];

  var _useWeb3React = useWeb3React(),
      account = _useWeb3React.account,
      library = _useWeb3React.library,
      chainId = _useWeb3React.chainId,
      connector = _useWeb3React.connector;

  var openWalletModal = function openWalletModal() {
    return setShowModal(true);
  };

  return /*#__PURE__*/React__default.createElement(Web3Context.Provider, {
    value: {
      library: library,
      account: account,
      chainId: chainId,
      connector: connector,
      openWalletModal: openWalletModal
    }
  }, children, /*#__PURE__*/React__default.createElement(WalletModal, {
    config: config,
    isOpen: showModal,
    onClose: function onClose() {
      return setShowModal(false);
    }
  }));
};

var Web3Provider = function Web3Provider(_ref2) {
  var config = _ref2.config,
      children = _ref2.children;
  return /*#__PURE__*/React__default.createElement(Web3ReactProvider, {
    getLibrary: getLibrary
  }, /*#__PURE__*/React__default.createElement(ThemeProvider, null, /*#__PURE__*/React__default.createElement(Web3ContextProvider, {
    config: config
  }, children)), /*#__PURE__*/React__default.createElement("link", {
    rel: "preconnect",
    href: "https://fonts.gstatic.com"
  }), /*#__PURE__*/React__default.createElement("link", {
    href: "https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap",
    rel: "stylesheet"
  }));
};
var useWeb3 = function useWeb3() {
  return useContext(Web3Context);
};

export { Web3Provider, useWeb3 };
