{"ast":null,"code":"var _jsxFileName = \"/Users/yousseftouggani/Desktop/Projet/Torekko/torekko/src/Pages/Drop.js\";\nimport React from 'react';\nimport { Component, Fragment } from 'react';\nimport banniere from '../Illustration/Banniere_uniswap.png';\nimport pack from '../Illustration/pack.png';\nimport './Drop.css';\nimport '../hooks/Timer.css';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Timer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      remaining: {\n        jours: 0,\n        heures: 0,\n        minutes: 0,\n        secondes: 0\n      },\n      isExpired: false\n    };\n\n    this.setDate = () => {\n      const {\n        targetDate,\n        targetTime\n      } = this.props,\n            // Get todays date and time\n      now = new Date().getTime(),\n            // Set the date we're counting down to\n      countDownDate = new Date(targetDate + \" \" + targetTime).getTime(); // Find the distance between now and the count down date\n\n      this.distance = countDownDate - now; // target date and time is less than current date and time\n\n      if (this.distance < 0) {\n        clearInterval(this.timer);\n        this.setState({\n          isExpired: true\n        });\n      } else {\n        this.setState({\n          remaining: {\n            jours: Math.floor(this.distance / (1000 * 60 * 60 * 24)),\n            heures: Math.floor(this.distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)),\n            minutes: Math.floor(this.distance % (1000 * 60 * 60) / (1000 * 60)),\n            secondes: Math.floor(this.distance % (1000 * 60) / 1000)\n          },\n          isExpired: false\n        });\n      }\n    };\n\n    this.counter = () => {\n      this.timer = setInterval(() => {\n        this.setDate();\n      }, 1000);\n    };\n  }\n\n  componentDidMount() {\n    this.setDate();\n    this.counter();\n  }\n\n  render() {\n    const {\n      remaining,\n      isExpired\n    } = this.state,\n          {\n      targetDate,\n      targetTime\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: !isExpired && targetDate && targetTime ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counter\",\n        children: Object.entries(remaining).map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"entry\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"entry-value\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"count top curr flipTop\",\n              children: el[1] + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"count top next\",\n              children: el[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"count bottom next flipBottom\",\n              children: el[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"count bottom curr\",\n              children: el[1] + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this)]\n          }, el[1], true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"entry-title\",\n            children: el[0].toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Expired\",\n        children: \"Expired\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Drop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      eth_adress: '',\n      mail: ''\n    };\n    this.handleChangeETH = this.handleChangeETH.bind(this);\n    this.handleChangeMail = this.handleChangeMail.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChangeETH(event) {\n    this.setState({\n      eth_adress: event.target.value\n    });\n  }\n\n  handleChangeMail(event) {\n    this.setState({\n      mail: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert(this.state.eth_adress, this.state.mail);\n    event.preventDefault();\n  }\n\n  render() {\n    console.log(this.props.isExpired);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: banniere,\n        alt: \"Logo\",\n        className: \"banniere\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-buy\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pour participer \\xE0 un drop, vous devez partager votre adresse ETH public. Sur cette adresse, vous devez poss\\xE9der au moins 10 $TRK et les conserver jusqu\\u2019au jour du drop. Vous aurez alors une chance de gagner le drop ci-dessus.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pack,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-form\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-ETH_Mainnet\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"ETH Mainnet\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"ETH_Mainnet\",\n                  placeholder: \"0xf7bdD3E931A5431868975E295cA689c9f8e76e01\",\n                  value: this.state.eth_adress,\n                  onChange: this.handleChangeETH\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-mail\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Mon adresse mail\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"mail\",\n                  value: this.state.mail,\n                  onChange: this.handleChangeMail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Timer, {\n                targetDate: \"Oct 25, 2021\",\n                targetTime: \"18:00:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"PARTICIPER\",\n              name: \"submit\",\n              onClick: this.handleSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Drop;","map":{"version":3,"sources":["/Users/yousseftouggani/Desktop/Projet/Torekko/torekko/src/Pages/Drop.js"],"names":["React","Component","Fragment","banniere","pack","useHistory","Timer","state","remaining","jours","heures","minutes","secondes","isExpired","setDate","targetDate","targetTime","props","now","Date","getTime","countDownDate","distance","clearInterval","timer","setState","Math","floor","counter","setInterval","componentDidMount","render","Object","entries","map","el","i","toUpperCase","Drop","constructor","eth_adress","mail","handleChangeETH","bind","handleChangeMail","handleSubmit","event","target","value","alert","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Component, Fragment } from 'react';\n\nimport banniere from '../Illustration/Banniere_uniswap.png'\nimport pack from '../Illustration/pack.png'\n\n\nimport './Drop.css'\nimport '../hooks/Timer.css'\n\nimport { useHistory } from 'react-router-dom'\nclass Timer extends Component {\n    state = {\n      remaining: {\n        jours: 0,\n        heures: 0,\n        minutes: 0,\n        secondes: 0\n      },\n      isExpired: false\n    };\n    // used to set and clear interval\n    timer;\n    // used to calculate the distance between \"current date and time\" and the \"target date and time\"\n    distance;\n  \n    componentDidMount() {\n      this.setDate();\n      this.counter();\n    }\n  \n    setDate = () => {\n      const { targetDate, targetTime } = this.props,\n        // Get todays date and time\n        now = new Date().getTime(),\n        // Set the date we're counting down to\n        countDownDate = new Date(targetDate + \" \" + targetTime).getTime();\n      \n      // Find the distance between now and the count down date\n      this.distance = countDownDate - now;\n      \n      // target date and time is less than current date and time\n      if (this.distance < 0) {\n        clearInterval(this.timer);\n        this.setState({ isExpired: true });\n      } else {\n        this.setState({\n          remaining: {\n            jours: Math.floor(this.distance / (1000 * 60 * 60 * 24)),\n            heures: Math.floor(\n              (this.distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n            ),\n            minutes: Math.floor((this.distance % (1000 * 60 * 60)) / (1000 * 60)),\n            secondes: Math.floor((this.distance % (1000 * 60)) / 1000)\n          },\n          isExpired: false\n        });\n      }\n    };\n  \n    counter = () => {\n      this.timer = setInterval(() => {\n        this.setDate();\n      }, 1000);\n    };\n  \n    render() {\n      const { remaining, isExpired } = this.state,\n      {targetDate, targetTime} = this.props;\n      \n      return (\n        <Fragment>\n          {!isExpired && targetDate && targetTime ? (\n            <div className=\"counter\">\n              {Object.entries(remaining).map((el, i) => (\n                <div key={i} className=\"entry\">\n                  <div key={el[1]} className=\"entry-value\">\n                    <span className=\"count top curr flipTop\">{el[1] + 1}</span>\n                    <span className=\"count top next\">{el[1]}</span>\n                    <span className=\"count bottom next flipBottom\">{el[1]}</span>\n                    <span className=\"count bottom curr\">{el[1] + 1}</span>\n                  </div>\n                  <div className=\"entry-title\">{el[0].toUpperCase()}</div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p className=\"Expired\">Expired</p>\n          )}\n        </Fragment> \n      );\n    }\n  }\n\nclass Drop extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {eth_adress: '',mail: ''};\n        this.handleChangeETH = this.handleChangeETH.bind(this);\n        this.handleChangeMail = this.handleChangeMail.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n      handleChangeETH(event) {    this.setState({eth_adress: event.target.value});  }\n      handleChangeMail(event) {    this.setState({mail: event.target.value});  }\n      handleSubmit(event) {\n        alert(this.state.eth_adress , this.state.mail);\n        event.preventDefault();\n      }\n\n    render() {\n        console.log(this.props.isExpired)\n        return(\n        <div className=\"drop\">\n            <img src={banniere} alt=\"Logo\" className=\"banniere\"/>\n            <div className=\"drop-buy\">\n                <p>Pour participer à un drop, vous devez partager votre adresse ETH public. \n                    Sur cette adresse, vous devez posséder au moins 10 $TRK et les conserver jusqu’au jour du drop. \n                    Vous aurez alors une chance de gagner le drop ci-dessus.</p>\n                <img src={pack} alt=\"Logo\"/>\n                <div className=\"drop-form\">\n                <form>\n                    <div className=\"form-ETH_Mainnet\">\n                    <label>\n                        ETH Mainnet\n                        <input type=\"text\" name=\"ETH_Mainnet\" placeholder=\"0xf7bdD3E931A5431868975E295cA689c9f8e76e01\" value={this.state.eth_adress} onChange={this.handleChangeETH}/>\n                    </label></div>\n                    <div className=\"form-mail\">\n                    <label>\n                        Mon adresse mail\n                        <input type=\"text\" name=\"mail\" value={this.state.mail} onChange={this.handleChangeMail}/>\n                    </label>\n                    </div>\n                    <div><Timer targetDate=\"Oct 25, 2021\" targetTime=\"18:00:00\" /></div>\n                    <input type=\"submit\" value=\"PARTICIPER\" name=\"submit\" onClick={this.handleSubmit}/>\n                </form>\n                </div>\n            </div>\n            \n        </div>\n        )\n    }\n}\n\nexport default Drop;"]},"metadata":{},"sourceType":"module"}