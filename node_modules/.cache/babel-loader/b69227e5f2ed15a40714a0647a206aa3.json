{"ast":null,"code":"var _jsxFileName = \"/Users/yousseftouggani/Desktop/Projet/Torekko/torekko/src/Pages/test.js\";\nimport React from 'react';\nimport { Component, Fragment } from 'react';\nimport Web3Connect from \"web3connect\";\nimport Web3 from \"web3\";\nimport Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Fortmatic from \"fortmatic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass test extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '130px 0px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Web3Connect.Button, {\n        providerOptions: {\n          portis: {\n            package: Portis,\n            options: {\n              id: \"PORTIS_ID\",\n              // required\n              network: \"mainnet\" // optional\n\n            }\n          },\n          walletconnect: {\n            package: WalletConnectProvider,\n            // required\n            options: {\n              infuraId: \"INFURA_ID\" // required\n\n            }\n          },\n          fortmatic: {\n            package: Fortmatic,\n            // required\n            options: {\n              key: \"FORTMATIC_KEY\" // required\n\n            }\n          }\n        },\n        onConnect: provider => {\n          const web3 = new Web3(provider); // add provider to web3\n        },\n        onClose: () => {\n          console.log(\"Web3Connect Modal Closed\"); // modal has closed\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n    /*<div style={{margin:'130px 0px'}}>\n        <button>Connnect</button>\n        <button>Disconnnect</button>\n    </div>*/\n    ;\n  }\n\n}\n\nexport default test;\n/*import React from 'react'\nimport { useWallet, UseWalletProvider } from 'use-wallet'\n\nfunction test() {\n  const wallet = useWallet()\n  const blockNumber = wallet.getBlockNumber()\n\n  return (\n    <>\n      <h1>Wallet</h1>\n      {wallet.status === 'connected' ? (\n        <div>\n          <div>Account: {wallet.account}</div>\n          <div>Balance: {wallet.balance}</div>\n          <button onClick={() => wallet.reset()}>disconnect</button>\n        </div>\n      ) : (\n        <div>\n          Connect:\n          <button onClick={() => wallet.connect()}>MetaMask</button>\n          <button onClick={() => wallet.connect('frame')}>Frame</button>\n          <button onClick={() => wallet.connect('portis')}>Portis</button>\n        </div>\n      )}\n    </>\n  )\n}\n\n// Wrap everything in <UseWalletProvider />\nexport default () => (\n  <UseWalletProvider\n    chainId={1}\n    connectors={{\n      // This is how connectors get configured\n      portis: { dAppId: 'my-dapp-id-123-xyz' },\n    }}\n  >\n    <App />\n  </UseWalletProvider>\n)\n */","map":{"version":3,"sources":["/Users/yousseftouggani/Desktop/Projet/Torekko/torekko/src/Pages/test.js"],"names":["React","Component","Fragment","Web3Connect","Web3","Portis","WalletConnectProvider","Fortmatic","test","render","margin","portis","package","options","id","network","walletconnect","infuraId","fortmatic","key","provider","web3","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAEzBQ,EAAAA,MAAM,GAAG;AAGL,wBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAAZ;AAAA,6BACA,QAAC,WAAD,CAAa,MAAb;AACA,QAAA,eAAe,EAAE;AACfC,UAAAA,MAAM,EAAE;AACNC,YAAAA,OAAO,EAAEP,MADH;AAENQ,YAAAA,OAAO,EAAE;AACLC,cAAAA,EAAE,EAAE,WADC;AACY;AACjBC,cAAAA,OAAO,EAAE,SAFJ,CAEc;;AAFd;AAFH,WADO;AAQfC,UAAAA,aAAa,EAAE;AACbJ,YAAAA,OAAO,EAAEN,qBADI;AACmB;AAChCO,YAAAA,OAAO,EAAE;AACPI,cAAAA,QAAQ,EAAE,WADH,CACe;;AADf;AAFI,WARA;AAcfC,UAAAA,SAAS,EAAE;AACTN,YAAAA,OAAO,EAAEL,SADA;AACW;AACpBM,YAAAA,OAAO,EAAE;AACPM,cAAAA,GAAG,EAAE,eADE,CACc;;AADd;AAFA;AAdI,SADjB;AAsBA,QAAA,SAAS,EAAGC,QAAD,IAAc;AACvB,gBAAMC,IAAI,GAAG,IAAIjB,IAAJ,CAASgB,QAAT,CAAb,CADuB,CACU;AAClC,SAxBD;AAyBA,QAAA,OAAO,EAAE,MAAM;AACbE,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EADa,CAC4B;AAC1C;AA3BD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AA+BA;AACZ;AACA;AACA;AAnCQ;AAuCD;;AA5CsB;;AAgD7B,eAAef,IAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport { Component, Fragment } from 'react';\nimport Web3Connect from \"web3connect\";\nimport Web3 from \"web3\";\nimport Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Fortmatic from \"fortmatic\";\n\nclass test extends Component {\n    \n    render() {\n\n        \n        return (\n            <div style={{margin:'130px 0px'}}>\n            <Web3Connect.Button\n            providerOptions={{\n              portis: {\n                package: Portis,\n                options: {\n                    id: \"PORTIS_ID\", // required\n                    network: \"mainnet\" // optional\n                }\n              },\n              walletconnect: {\n                package: WalletConnectProvider, // required\n                options: {\n                  infuraId: \"INFURA_ID\" // required\n                }\n              },\n              fortmatic: {\n                package: Fortmatic, // required\n                options: {\n                  key: \"FORTMATIC_KEY\" // required\n                }\n              }\n            }}\n            onConnect={(provider) => {\n              const web3 = new Web3(provider); // add provider to web3\n            }}\n            onClose={() => {\n              console.log(\"Web3Connect Modal Closed\"); // modal has closed\n            }}\n          />\n          </div>\n            /*<div style={{margin:'130px 0px'}}>\n                <button>Connnect</button>\n                <button>Disconnnect</button>\n            </div>*/\n            \n          \n        );\n      }\n    \n}\n\nexport default test;\n\n/*import React from 'react'\nimport { useWallet, UseWalletProvider } from 'use-wallet'\n\nfunction test() {\n  const wallet = useWallet()\n  const blockNumber = wallet.getBlockNumber()\n\n  return (\n    <>\n      <h1>Wallet</h1>\n      {wallet.status === 'connected' ? (\n        <div>\n          <div>Account: {wallet.account}</div>\n          <div>Balance: {wallet.balance}</div>\n          <button onClick={() => wallet.reset()}>disconnect</button>\n        </div>\n      ) : (\n        <div>\n          Connect:\n          <button onClick={() => wallet.connect()}>MetaMask</button>\n          <button onClick={() => wallet.connect('frame')}>Frame</button>\n          <button onClick={() => wallet.connect('portis')}>Portis</button>\n        </div>\n      )}\n    </>\n  )\n}\n\n// Wrap everything in <UseWalletProvider />\nexport default () => (\n  <UseWalletProvider\n    chainId={1}\n    connectors={{\n      // This is how connectors get configured\n      portis: { dAppId: 'my-dapp-id-123-xyz' },\n    }}\n  >\n    <App />\n  </UseWalletProvider>\n)\n */"]},"metadata":{},"sourceType":"module"}